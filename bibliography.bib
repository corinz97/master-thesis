@article{vinod2017state,
  title={State of the art of e-democracy for Smart Cities},
  author={Vinod Kumar, TM},
  journal={E-democracy for smart cities},
  pages={1--47},
  year={2017},
  publisher={Springer}
}

@article{sotoacosta,
author = {Soto-Acosta, Pedro},
year = {2020},
month = {10},
pages = {260-266},
title = {COVID-19 Pandemic: Shifting Digital Transformation to a High-Speed Gear},
volume = {37},
journal = {Information Systems Management},
doi = {10.1080/10580530.2020.1814461}
}

@inproceedings{rotzocki,
author = {Roztocki, Narcyz and Strzelczyk, Wojciech and Weistroffer, Heinz},
year = {2022},
month = {03},
pages = {},
title = {Concepts of E-Democracy in an E-Society}
}

@article{aichholzer2020experience,
  title={Experience with digital tools in different types of e-participation},
  author={Aichholzer, Georg and Rose, Gloria},
  journal={European E-democracy in practice},
  pages={93--140},
  year={2020},
  publisher={Springer International Publishing}
}
%rikk

@article{korthagen2020non,
  title={Non-binding decision-making},
  author={Korthagen, Iris and Larsen, Casper Freundlich and Nielsen, Rasmus {\O}},
  journal={European E-democracy in practice},
  pages={237--271},
  year={2020},
  publisher={Springer International Publishing}
}

@book{hennen2020european,
  title={European e-democracy in practice},
  author={Hennen, Leonhard and Van Keulen, Ira and Korthagen, Iris and Aichholzer, Georg and Lindner, Ralf and Nielsen, Rasmus {\O}jvind},
  year={2020},
  publisher={Springer Nature}
}

@inproceedings{mcgaley,
  author       = {Margaret McGaley and
                  Joe McCarthy},
  editor       = {Alexander Prosser and
                  Robert Krimmer},
  title        = {Transparency and e-Voting: Democratic vs. Commercial Interests},
  booktitle    = {Electronic Voting in Europe - Technology, Law, Politics and Society,
                  Workshop of the {ESF} {TED} Programme together with {GI} and OCG,
                  July, 7th-9th, 2004, in Schlo{\ss} Hofen / Bregenz, Lake of Constance,
                  Austria, Proceedings},
  series       = {{LNI}},
  volume       = {{P-47}},
  pages        = {153--163},
  publisher    = {{GI}},
  year         = {2004},
  url          = {https://dl.gi.de/handle/20.500.12116/29121},
  timestamp    = {Tue, 04 Jul 2023 17:44:33 +0200},
  biburl       = {https://dblp.org/rec/conf/evoting/McGaleyM04.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}

@phdthesis{Trapanese:2018,
          author = "Thomas Trapanese",
           title = "Modelli e piattaforme per la democrazia digitale: analisi e confronto",
        abstract = "Democrazia: etimologicamente significa governo del popolo, una forma di governo nella quale il potere decisionale spetta al popolo. 
					L'idea di democrazia non {\`e} univoca, nel corso della storia ha trovato diverse modalit{\`a} di applicazione tutte caratterizzate dalla ricerca della forma ideale capace di dare l'effettivo potere decisionale al popolo.
					Generalmente siamo portati ad associare l'idea di democrazia ad una forma di governo, {\`e} certamente vero che molti governi nazionali implementino una loro forma democratica ma {\`e} anche vero che il concetto di democrazia {\`e} molto pi{\`u} vasto e pu{\`o} essere applicato in qualunque contesto in cui sia richiesto di prendere una decisione su un argomento.
					Negli ultimi anni grazie all'avvento di internet, il concetto di democrazia si {\`e} evoluto ed ha portato alla nascita dei concetti di e-democracy (una forma di democrazia diretta esercitata attraverso l'ausilio di strumenti digitali) e democrazia fluida (un modello ibrido tra la democrazia diretta e quella rappresentativa). Entrambi questi concetti sono stati concretizzati in software che mirano a fornire gli strumenti per implementare una democrazia.
					L'idea di democrazia ha innumerevoli forme e implementazioni ma, {\`e} possibile estrarre delle caratteristiche comuni? in altre parole, {\`e} possibile individuare un modello per le varie forme di democrazia?
					Nel corso di questa trattazione cercher{\`o} di rispondere a questa domanda individuando le componenti essenziali di un modello democratico e valutandone le principali implementazioni. Far{\`o} anche un analisi dei principali software per l'e-democracy che valuter{\`o} sia dal punto di vista tecnico che democratico (analizzando quale modello implementino).",
             url = "http://amslaurea.unibo.it/15562/",
        keywords = "Democrazia,e-democracy,Democrazia fluida,TuCSoN,JADE,Sistemi distribuiti,Simulatore"
}

@Inbook{Pianini:2019,
author="Pianini, Danilo
and Omicini, Andrea",
editor="Contucci, Pierluigi
and Omicini, Andrea
and Pianini, Danilo
and S{\^i}rbu, Alina",
title="Democratic Process and Digital Platforms: An Engineering Perspective",
bookTitle="The Future of Digital Democracy: An Interdisciplinary Approach",
year="2019",
publisher="Springer International Publishing",
address="Cham",
pages="83--96",
abstract="The widespread adoption of digital technologies and computational devices, along with their pervasiveness in our everyday life, is going to make them hugely impact over all key processes in human societies-including the democratic one. The last decade has witnessed the emergence of many tools and platforms for digital democracy. However, also because of the huge social and political pressure, such emergence has possibly been too tumultuous, leaving several fundamental concerns unanswered: among them, here we focus on those that belong to the engineering process. For instance, in a classic software engineering process, one or more artefacts are produced in the analysis phase that represent a formal, possibly machine understandable, model of the domain. Instead, looking at the most common e-democracy platforms, the step is seemingly missing, along with others that concur at building a solid engineering process. This chapter elaborates on the current status of digital democracy, and points out the main software engineering issues that current and future tools and platforms should address.",
isbn="978-3-030-05333-8",
doi="10.1007/978-3-030-05333-8_6",
url="https://doi.org/10.1007/978-3-030-05333-8_6"
}



@article{smartwater,
  title={Smart water management and eDemocracy in India},
  author={Bedi, Prabh and Tripathi, Neha Goel},
  journal={E-Democracy for Smart Cities},
  pages={259--279},
  year={2017},
  publisher={Springer}
}

@article{castelfranchi2019problematic,
  title={The problematic relationship between trust and democracy; its crisis and web dangers and promises},
  author={Castelfranchi, Cristiano and Falcone, Rino},
  journal={The Future of Digital Democracy: An Interdisciplinary Approach},
  pages={62--82},
  year={2019},
  publisher={Springer}
}


@misc{WebsitePartecipaMi,
    title        = {PartecipaMi - Insieme verso una citt√† partecipata},
    author       = {Comune di Milano},
    year         = 2024,
    note         = {Accessed: 06/02/2024},
    howpublished = {\url{https://www.partecipami.it/}}
}


@misc{WebsiteGitHubActions,
    title        = {GitHub Actions Docs},
    author       = {Github},
    year         = 2024,
    note         = {Accessed: 16/02/2024},
    howpublished = {\url{https://docs.github.com/en/actions}}
}

@misc{WebsiteKotlinGenerics,
    title        = {Kotlin Generics, generic constraints},
    author       = {Kotlin},
    year         = 2023,
    note         = {Accessed: 16/11/2023},
    howpublished = {\url{https://kotlinlang.org/docs/generics.html#generic-constraints}}
}

@misc{WebsiteKotlinLambda,
    title        = {Kotlin Lambdas},
    author       = {Kotlin},
    year         = 2023,
    note         = {Accessed: 16/11/2023},
    howpublished = {\url{https://kotlinlang.org/docs/lambdas.html}}
}

@misc{WebsiteKotlinOperatorOverloading,
    title        = {Kotlin Operator overloading},
    author       = {Kotlin},
    year         = 2023,
    note         = {Accessed: 16/11/2023},
    howpublished = {\url{https://kotlinlang.org/docs/operator-overloading.html}}
}

@misc{WebsiteKotlinCompanionObject,
    title        = {Kotlin Companion Object},
    author       = {Kotlin},
    year         = 2023,
    note         = {Accessed: 16/11/2023},
    howpublished = {\url{https://kotlinlang.org/docs/object-declarations.html#companion-objects}}
}

@misc{WebsiteKotlinMultiPlatformTargets,
    title        = {Kotlin MultiPlatform Targets},
    author       = {Kotlin},
    year         = 2023,
    note         = {Accessed: 16/12/2023},
    howpublished = {\url{https://kotlinlang.org/docs/multiplatform-hierarchy.html#default-hierarchy-template}}
}

@misc{WebsiteKotlinMultiPlatformCompilations,
    title        = {Kotlin Multiplatform Compilations},
    author       = {Kotlin},
    year         = 2023,
    note         = {Accessed: 16/12/2023},
    howpublished = {\url{https://kotlinlang.org/docs/multiplatform-configure-compilations.html}}
}

@misc{WebsiteErgastAPI,
    title        = {Ergast API Data},
    author       = {Ergast API},
    year         = 2024,
    note         = {Accessed: 20/01/2024},
    howpublished = {\url{https://ergast.com/mrd/methods/standings/}}
}

@misc{WebsiteErgastAPIStandings,
    title        = {Ergast API Standings},
    author       = {Ergast API},
    year         = 2024,
    note         = {Accessed: 20/01/2024},
    howpublished = {\url{https://ergast.com/mrd/methods/standings/}}
}

@misc{WebsiteTemplateKotlinMP,
    title        = {Template for Kotlin Multiplatform Projects},
    author       = {Danilo Pianini},
    year         = 2023,
    note         = {Accessed: 15/10/2023},
    howpublished = {\url{https://github.com/DanySK/Template-for-Kotlin-Multiplatform-Projects}}
}


@book{golub2013matrix,
  title={Matrix computations},
  author={Golub, Gene H and Van Loan, Charles F},
  year={2013},
  publisher={JHU press}
}

@phdthesis{Siboni:2018,
          author = {Enrico Siboni},
           title = {2p-Kt: A Kotlin-based, Multi-Platform Framework for Symbolic AI},
        abstract = {Al giorno d'oggi i sistemi software complessi sono tipicamente costruiti come aggregati di componenti eterogenee, in cui l'applicazione di AI simbolica pu{\`o} aiutare efficacemente ad affrontare problemi chiave come l'intelligenza delle componenti e la gestione delle interazioni. Tuttavia, la maggior parte delle soluzioni per la manipolazione simbolica sono attualmente in versione prototipale "proof of concept" oppure sono dei "runtime" monolitici, sviluppati principalmente per una piattaforma specifica o un problema specifico.  Tra i tanti, tuProlog, due decenni fa, propose un'architettura flessibile e modulare implementata su di una piattaforma portatile ? vale a dire la JVM (Java Virtual Machine) ? che avrebbe dovuto superare i suddetti problemi. Purtroppo, la tecnologia del tempo costrinse alcune scelte di design che oggi stanno limitando il suo sviluppo e la sua portabilit{\`a} su altre piattaforme ? fondamentali per l'AI moderna ? come JavaScript (JS) o iOS. Per tali motivi in questa tesi proponiamo (il design e lo sviluppo di) 2p-kt, un motore Prolog modulare "object-oriented" per la manipolazione simbolica, scritto in Kotlin puro ? supportando cos{\`i} la compilazione su diverse piattaforme, tra cui JVM e JS ? con un supporto naturale alla risoluzione Prolog SLD (Selective Linear Definite) ma potenzialmente aperto ad altre strategie di risoluzione. Il design di 2p-kt {\`e} concepito per massimizzare la modularit{\`a}, la configurabilit{\`a}, la leggerezza e la facilit{\`a} di utilizzo delle sue componenti, minimizzando al contempo la loro mutabilit{\`a} e mantenendo aperta la possibilit{\`a} di iniettare nuove librerie Prolog o strategie di risoluzione.},
             url = {http://amslaurea.unibo.it/19444/},
        keywords = {Prolog,tuProlog,Logic programming,Kotlin,Multi-platform,JVM,JavaScript,2p-kt,Symbolic manipulation,Modular}
}

@inproceedings{kozak2022three,
  title={Three-module framework for automated software testing},
  author={Kozak, Ilona and Berko, Andrii},
  booktitle={2022 IEEE 17th International Conference on Computer Sciences and Information Technologies (CSIT)},
  pages={454--457},
  year={2022},
  organization={IEEE}
}

@inproceedings{soto2019emergence,
  title={The emergence of software diversity in maven central},
  author={Soto-Valero, C{\'e}sar and Benelallam, Amine and Harrand, Nicolas and Barais, Olivier and Baudry, Benoit},
  booktitle={2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR)},
  pages={333--343},
  year={2019},
  organization={IEEE}
}

@misc{NPMChaos,
    title        = {How one developer just broke Node, Babel and thousands of projects in 11 lines of JavaScript},
    author       = {Chris Williams, The Register},
    year         = 2016,
    note         = {Accessed: 01/02/2023},
    howpublished = {\url{https://www.theregister.com/2016/03/23/npm_left_pad_chaos/}}
}










